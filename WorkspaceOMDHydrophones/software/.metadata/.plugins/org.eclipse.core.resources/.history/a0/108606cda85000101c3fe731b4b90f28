#include "xuartps.h"
#include "xil_printf.h"
#include <stdlib.h>  // For atoi
#include "uartHandler.h"

#define UART_DEVICE_ID  XPAR_XUARTPS_0_DEVICE_ID
#define MAX_BUFFER_SIZE 64

XUartPs Uart_Ps;
u8 ReceivedData[MAX_BUFFER_SIZE];

void uartHandler() {
    XUartPs_Config *Config = XUartPs_LookupConfig(UART_DEVICE_ID);
    if (!Config) {
        xil_printf("UART config not found.\n");
        return;
    }

    XUartPs_CfgInitialize(&Uart_Ps, Config, Config->BaseAddress);

    u32 bytesReceived = 0;

    // Wait until we receive something
    while (bytesReceived == 0) {
        bytesReceived = XUartPs_Recv(&Uart_Ps, ReceivedData, MAX_BUFFER_SIZE - 1);
    }

    // Null terminate for safety
    ReceivedData[bytesReceived] = '\0';

    // Print back to UART (via stdout)
    xil_printf("Received: %s\n", ReceivedData);
}
