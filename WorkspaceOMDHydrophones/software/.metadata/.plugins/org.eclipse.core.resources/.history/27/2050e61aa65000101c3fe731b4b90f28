#include "xuartps.h"
#include "xil_printf.h"
#include <stdlib.h>  // For atoi
#include "uartHandler.h"
/*
//#define UART_DEVICE_ID  XPAR_XUARTPS_0_DEVICE_ID
//#define MAX_BUFFER_SIZE 64

XUartPs Uart_Ps;
u8 ReceivedData[MAX_BUFFER_SIZE];

void uartHandler(int* state, int* test1, int* test2) {


	XUartPs_Config *Config = XUartPs_LookupConfig(UART_DEVICE_ID);
	XUartPs_CfgInitialize(&Uart_Ps, Config, Config->BaseAddress);

	char message[MAX_BUFFER_SIZE];
	u32 bytesReceived = XUartPs_Recv(&Uart_Ps, ReceivedData, MAX_BUFFER_SIZE);
			int j = 0;
			int instruction;
			int instructionValue;
			while (MAX_BUFFER_SIZE>j){
			if (ReceivedData[j]=='<') {
				j++;
				instruction = ReceivedData[j] - 48;
				ReceivedData[j]=0;
				j++;
				j++;
				int n = 0;
				while (ReceivedData[j] != '>' && j < MAX_BUFFER_SIZE){
					message[n] = ReceivedData[j];
					ReceivedData[j]=0;
					j++;
					n++;
				}
				message[n] = '\0';
				instructionValue = atoi(message);
				}
			j++;
			}

	xil_printf("Received: %s\n", (char*)ReceivedData);
}
